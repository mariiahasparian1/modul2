#include <Windows.h>
#include <iostream>
using namespace std;
void matrix66();
void matrix30();
const int M = 20, N = 20; //максимальне кількість рядків стовпців
int main()
{
SetConsoleCP(1251);
SetConsoleOutputCP(1251);
int menu;
do
{
cout << "Номер завдання(0 для виходу):";
cin >> menu;
switch (menu)
{ // перемикання між завданнями
case 1:
 matrix30();
break; // Завдання 1
case 2:
 matrix66();
break; // Завдання 2
}
} while (menu);
system("pause");
return 0;
}
void input_matrix(int matrix[M][N], int rows, int cols) 
{
 cout << "Введіть матрицю розміру " << rows << " x " << cols << ":" << endl;
 for (int i = 0; i < rows; i++) {
 for (int j = 0; j < cols; j++) {
 cin >> matrix[i][j];
 }
 }
}
// функція виведення масиву
void print_matrix(int matrix[M][N], int rows, int cols) {
 cout << "Матриця розміру " << rows << " x " << cols << ":" << endl;
 for (int i = 0; i < rows; i++) {
 for (int j = 0; j < cols; j++) {
 cout << matrix[i][j] << " ";
 }
 cout << endl;
 }
}
void DelMatrixRow(int matrix[M][N], int Y, int& N, int M)
{
 if (Y > 0)
 {
 N = N - 1;
 for (int i = Y; i <= N; i++)
 {
 for (int j = 1; j <= M; j++)
 {
 matrix[i][j] = matrix[i + 1][j];
 }
 }
 }
}
void matrix30()
{
 int matrix[M][N];
 int cols, rows, i, j,Sum = 0,Num=0;
 double Sred = 0;
 cout << "Введіть кількість рядків (максимум " << M << "): ";
 cin >> rows;
 cout << "Введіть кількість стовпців (максимум " << N << "): ";
 cin >> cols;
 input_matrix(matrix, rows, cols);
 for (j = 0; j < cols; j++)
 {
 Sum = 0;
 for (i = 0; i < rows; i++) Sum += matrix[i][j];
 Sred = Sum / cols;
 Num = 0;
 for (i = 0; i < rows; i++)
 {
 if (matrix[i][j] > Sred) Num++;
 }
 cout << j + 1 << " col:" << Num << endl;
 }
}
void matrix66()
{
 int rows,cols,Row;
 int matrix[M][N];
 // Введення розмірів матриці
 cout << "Введіть кількість рядків (максимум " << M << "): ";
 cin >> rows;
 cout << "Введіть кількість стовпців (максимум " << N << "): ";
 cin >> cols;
 input_matrix(matrix, rows, cols);
 // пошук рядка з від'ємними елементами
 int row = -1;
 for (int i = 0; i < rows; i++) {
 bool has_positive_element = false;
 for (int j = 0; j < cols; j++) {
 if (matrix[i][j] >= 0) {
 has_positive_element = true;
 break;
 }
 }
 if (!has_positive_element) {
 row = i;
 break;
 }
 }
 // видалення рядка
 if (row != -1) {
 for (int i = row; i < rows - 1; i++) {
 for (int j = 0; j < cols; j++) {
 matrix[i][j] = matrix[i + 1][j];
 }
 }
 rows--;
 }
 for (int i = 0; i < rows; i++) {
 for (int j = 0; j < cols; j++) {
 cout << matrix[i][j] << " ";
 }
 cout << endl;
 }
}
